export const newMethodMap: {
    readonly '/session/:sessionId/timeouts/async_script': {
        readonly POST: {
            readonly command: "asyncScriptTimeout";
            readonly payloadParams: {
                readonly required: readonly ["ms"];
            };
        };
    };
    readonly '/session/:sessionId/timeouts/implicit_wait': {
        readonly POST: {
            readonly command: "implicitWait";
            readonly payloadParams: {
                readonly required: readonly ["ms"];
            };
        };
    };
    readonly '/session/:sessionId/window/:windowhandle/size': {
        readonly GET: {
            readonly command: "getWindowSize";
        };
    };
    readonly '/session/:sessionId/element/:elementId/submit': {
        readonly POST: {
            readonly command: "submit";
        };
    };
    readonly '/session/:sessionId/keys': {
        readonly POST: {
            readonly command: "keys";
            readonly payloadParams: {
                readonly required: readonly ["value"];
            };
        };
    };
    readonly '/session/:sessionId/element/:elementId/location': {
        readonly GET: {
            readonly command: "getLocation";
        };
    };
    readonly '/session/:sessionId/element/:elementId/location_in_view': {
        readonly GET: {
            readonly command: "getLocationInView";
        };
    };
    readonly '/session/:sessionId/element/:elementId/size': {
        readonly GET: {
            readonly command: "getSize";
        };
    };
    readonly '/session/:sessionId/appium/device/shake': {
        readonly POST: {
            readonly command: "mobileShake";
        };
    };
    readonly '/session/:sessionId/appium/device/lock': {
        readonly POST: {
            readonly command: "lock";
            readonly payloadParams: {
                readonly optional: readonly ["seconds"];
            };
        };
    };
    readonly '/session/:sessionId/appium/device/unlock': {
        readonly POST: {
            readonly command: "unlock";
        };
    };
    readonly '/session/:sessionId/appium/device/is_locked': {
        readonly POST: {
            readonly command: "isLocked";
        };
    };
    readonly '/session/:sessionId/appium/start_recording_screen': {
        readonly POST: {
            readonly command: "startRecordingScreen";
            readonly payloadParams: {
                readonly optional: readonly ["options"];
            };
        };
    };
    readonly '/session/:sessionId/appium/stop_recording_screen': {
        readonly POST: {
            readonly command: "stopRecordingScreen";
            readonly payloadParams: {
                readonly optional: readonly ["options"];
            };
        };
    };
    readonly '/session/:sessionId/appium/device/app_state': {
        readonly POST: {
            readonly command: "queryAppState";
            readonly payloadParams: {
                readonly required: readonly [readonly ["appId"], readonly ["bundleId"]];
            };
        };
    };
    readonly '/session/:sessionId/appium/simulator/touch_id': {
        readonly POST: {
            readonly command: "touchId";
            readonly payloadParams: {
                readonly required: readonly ["match"];
            };
        };
    };
    readonly '/session/:sessionId/appium/simulator/toggle_touch_id_enrollment': {
        readonly POST: {
            readonly command: "toggleEnrollTouchId";
            readonly payloadParams: {
                readonly optional: readonly ["enabled"];
            };
        };
    };
    readonly '/session/:sessionId/appium/app/launch': {
        readonly POST: {
            readonly command: "launchApp";
        };
    };
    readonly '/session/:sessionId/appium/app/close': {
        readonly POST: {
            readonly command: "closeApp";
        };
    };
    readonly '/session/:sessionId/appium/app/reset': {
        readonly POST: {
            readonly command: "reset";
        };
    };
    readonly '/session/:sessionId/appium/app/background': {
        readonly POST: {
            readonly command: "background";
            readonly payloadParams: {
                readonly required: readonly ["seconds"];
            };
        };
    };
    readonly '/session/:sessionId/appium/app/strings': {
        readonly POST: {
            readonly command: "getStrings";
            readonly payloadParams: {
                readonly optional: readonly ["language", "stringFile"];
            };
        };
    };
    readonly '/session/:sessionId/appium/element/:elementId/value': {
        readonly POST: {
            readonly command: "setValueImmediate";
            readonly payloadParams: {
                readonly required: readonly ["text"];
            };
        };
    };
    readonly '/session/:sessionId/appium/receive_async_response': {
        readonly POST: {
            readonly command: "receiveAsyncResponse";
            readonly payloadParams: {
                readonly required: readonly ["response"];
            };
        };
    };
    readonly '/session/:sessionId/appium/device/get_clipboard': {
        readonly POST: {
            readonly command: "getClipboard";
            readonly payloadParams: {
                readonly optional: readonly ["contentType"];
            };
        };
    };
    readonly '/session/:sessionId/appium/device/set_clipboard': {
        readonly POST: {
            readonly command: "setClipboard";
            readonly payloadParams: {
                readonly required: readonly ["content"];
                readonly optional: readonly ["contentType", "label"];
            };
        };
    };
};
//# sourceMappingURL=method-map.d.ts.map