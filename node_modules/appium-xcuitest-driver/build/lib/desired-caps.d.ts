export default desiredCapConstraints;
export namespace desiredCapConstraints {
    namespace platformName {
        let presence: true;
        let isString: true;
        let inclusionCaseInsensitive: readonly ["iOS", "tvOS"];
    }
    namespace browserName {
        let isString_1: true;
        export { isString_1 as isString };
    }
    namespace app {
        let isString_2: true;
        export { isString_2 as isString };
    }
    namespace calendarFormat {
        let isString_3: true;
        export { isString_3 as isString };
    }
    namespace bundleId {
        let isString_4: true;
        export { isString_4 as isString };
    }
    namespace udid {
        let isString_5: true;
        export { isString_5 as isString };
    }
    namespace autoAcceptAlerts {
        let isBoolean: true;
    }
    namespace autoDismissAlerts {
        let isBoolean_1: true;
        export { isBoolean_1 as isBoolean };
    }
    namespace nativeWebTap {
        let isBoolean_2: true;
        export { isBoolean_2 as isBoolean };
    }
    namespace safariInitialUrl {
        let isString_6: true;
        export { isString_6 as isString };
    }
    namespace initialDeeplinkUrl {
        let isString_7: true;
        export { isString_7 as isString };
    }
    namespace safariAllowPopups {
        let isBoolean_3: true;
        export { isBoolean_3 as isBoolean };
    }
    namespace safariIgnoreFraudWarning {
        let isBoolean_4: true;
        export { isBoolean_4 as isBoolean };
    }
    namespace safariOpenLinksInBackground {
        let isBoolean_5: true;
        export { isBoolean_5 as isBoolean };
    }
    namespace safariShowFullResponse {
        let isBoolean_6: true;
        export { isBoolean_6 as isBoolean };
    }
    namespace keepKeyChains {
        let isBoolean_7: true;
        export { isBoolean_7 as isBoolean };
    }
    namespace resetLocationService {
        let isBoolean_8: true;
        export { isBoolean_8 as isBoolean };
    }
    namespace localizableStringsDir {
        let isString_8: true;
        export { isString_8 as isString };
    }
    let processArguments: {};
    namespace showIOSLog {
        let isBoolean_9: true;
        export { isBoolean_9 as isBoolean };
    }
    namespace webviewConnectRetries {
        let isNumber: true;
    }
    namespace clearSystemFiles {
        let isBoolean_10: true;
        export { isBoolean_10 as isBoolean };
    }
    namespace customSSLCert {
        let isString_9: true;
        export { isString_9 as isString };
    }
    namespace remoteDebugProxy {
        let isString_10: true;
        export { isString_10 as isString };
    }
    namespace enablePerformanceLogging {
        let isBoolean_11: true;
        export { isBoolean_11 as isBoolean };
    }
    namespace enableAsyncExecuteFromHttps {
        let isBoolean_12: true;
        export { isBoolean_12 as isBoolean };
    }
    namespace fullContextList {
        let isBoolean_13: true;
        export { isBoolean_13 as isBoolean };
    }
    namespace ignoreAboutBlankUrl {
        let isBoolean_14: true;
        export { isBoolean_14 as isBoolean };
    }
    namespace skipLogCapture {
        let isBoolean_15: true;
        export { isBoolean_15 as isBoolean };
    }
    namespace deviceName {
        let isString_11: true;
        export { isString_11 as isString };
    }
    namespace showXcodeLog {
        let isBoolean_16: true;
        export { isBoolean_16 as isBoolean };
    }
    namespace wdaLocalPort {
        let isNumber_1: true;
        export { isNumber_1 as isNumber };
    }
    namespace wdaRemotePort {
        let isNumber_2: true;
        export { isNumber_2 as isNumber };
    }
    namespace wdaBaseUrl {
        let isString_12: true;
        export { isString_12 as isString };
    }
    namespace iosInstallPause {
        let isNumber_3: true;
        export { isNumber_3 as isNumber };
    }
    namespace xcodeConfigFile {
        let isString_13: true;
        export { isString_13 as isString };
    }
    namespace xcodeOrgId {
        let isString_14: true;
        export { isString_14 as isString };
    }
    namespace xcodeSigningId {
        let isString_15: true;
        export { isString_15 as isString };
    }
    namespace keychainPath {
        let isString_16: true;
        export { isString_16 as isString };
    }
    namespace keychainPassword {
        let isString_17: true;
        export { isString_17 as isString };
    }
    namespace bootstrapPath {
        let isString_18: true;
        export { isString_18 as isString };
    }
    namespace agentPath {
        let isString_19: true;
        export { isString_19 as isString };
    }
    namespace scaleFactor {
        let isString_20: true;
        export { isString_20 as isString };
    }
    namespace usePrebuiltWDA {
        let isBoolean_17: true;
        export { isBoolean_17 as isBoolean };
    }
    namespace prebuiltWDAPath {
        let isString_21: true;
        export { isString_21 as isString };
    }
    namespace usePreinstalledWDA {
        let isBoolean_18: true;
        export { isBoolean_18 as isBoolean };
    }
    namespace updatedWDABundleIdSuffix {
        let isString_22: true;
        export { isString_22 as isString };
    }
    namespace webDriverAgentUrl {
        let isString_23: true;
        export { isString_23 as isString };
    }
    namespace derivedDataPath {
        let isString_24: true;
        export { isString_24 as isString };
    }
    namespace launchWithIDB {
        let isBoolean_19: true;
        export { isBoolean_19 as isBoolean };
    }
    namespace useNewWDA {
        let isBoolean_20: true;
        export { isBoolean_20 as isBoolean };
    }
    namespace wdaLaunchTimeout {
        let isNumber_4: true;
        export { isNumber_4 as isNumber };
    }
    namespace wdaConnectionTimeout {
        let isNumber_5: true;
        export { isNumber_5 as isNumber };
    }
    namespace updatedWDABundleId {
        let isString_25: true;
        export { isString_25 as isString };
    }
    namespace resetOnSessionStartOnly {
        let isBoolean_21: true;
        export { isBoolean_21 as isBoolean };
    }
    let commandTimeouts: {};
    namespace wdaStartupRetries {
        let isNumber_6: true;
        export { isNumber_6 as isNumber };
    }
    namespace wdaStartupRetryInterval {
        let isNumber_7: true;
        export { isNumber_7 as isNumber };
    }
    namespace prebuildWDA {
        let isBoolean_22: true;
        export { isBoolean_22 as isBoolean };
    }
    namespace connectHardwareKeyboard {
        let isBoolean_23: true;
        export { isBoolean_23 as isBoolean };
    }
    namespace forceTurnOnSoftwareKeyboardSimulator {
        let isBoolean_24: true;
        export { isBoolean_24 as isBoolean };
    }
    namespace simulatorPasteboardAutomaticSync {
        let isString_26: true;
        export { isString_26 as isString };
    }
    namespace simulatorDevicesSetPath {
        let isString_27: true;
        export { isString_27 as isString };
    }
    namespace calendarAccessAuthorized {
        let isBoolean_25: true;
        export { isBoolean_25 as isBoolean };
        export let deprecated: true;
    }
    namespace useSimpleBuildTest {
        let isBoolean_26: true;
        export { isBoolean_26 as isBoolean };
        let deprecated_1: true;
        export { deprecated_1 as deprecated };
    }
    namespace waitForQuiescence {
        let isBoolean_27: true;
        export { isBoolean_27 as isBoolean };
        let deprecated_2: true;
        export { deprecated_2 as deprecated };
    }
    namespace maxTypingFrequency {
        let isNumber_8: true;
        export { isNumber_8 as isNumber };
    }
    namespace nativeTyping {
        let isBoolean_28: true;
        export { isBoolean_28 as isBoolean };
    }
    namespace simpleIsVisibleCheck {
        let isBoolean_29: true;
        export { isBoolean_29 as isBoolean };
    }
    namespace shouldUseSingletonTestManager {
        let isBoolean_30: true;
        export { isBoolean_30 as isBoolean };
    }
    namespace isHeadless {
        let isBoolean_31: true;
        export { isBoolean_31 as isBoolean };
    }
    namespace useXctestrunFile {
        let isBoolean_32: true;
        export { isBoolean_32 as isBoolean };
    }
    namespace absoluteWebLocations {
        let isBoolean_33: true;
        export { isBoolean_33 as isBoolean };
    }
    namespace simulatorWindowCenter {
        let isString_28: true;
        export { isString_28 as isString };
    }
    namespace simulatorStartupTimeout {
        let isNumber_9: true;
        export { isNumber_9 as isNumber };
    }
    namespace simulatorTracePointer {
        let isBoolean_34: true;
        export { isBoolean_34 as isBoolean };
    }
    namespace useJSONSource {
        let isBoolean_35: true;
        export { isBoolean_35 as isBoolean };
    }
    namespace enforceFreshSimulatorCreation {
        let isBoolean_36: true;
        export { isBoolean_36 as isBoolean };
    }
    namespace shutdownOtherSimulators {
        let isBoolean_37: true;
        export { isBoolean_37 as isBoolean };
    }
    namespace keychainsExcludePatterns {
        let isString_29: true;
        export { isString_29 as isString };
    }
    namespace showSafariConsoleLog {
        let isBoolean_38: true;
        export { isBoolean_38 as isBoolean };
    }
    namespace showSafariNetworkLog {
        let isBoolean_39: true;
        export { isBoolean_39 as isBoolean };
    }
    namespace safariGarbageCollect {
        let isBoolean_40: true;
        export { isBoolean_40 as isBoolean };
    }
    namespace safariGlobalPreferences {
        let isObject: true;
    }
    namespace safariLogAllCommunication {
        let isBoolean_41: true;
        export { isBoolean_41 as isBoolean };
    }
    namespace safariLogAllCommunicationHexDump {
        let isBoolean_42: true;
        export { isBoolean_42 as isBoolean };
    }
    namespace safariSocketChunkSize {
        let isNumber_10: true;
        export { isNumber_10 as isNumber };
    }
    namespace mjpegServerPort {
        let isNumber_11: true;
        export { isNumber_11 as isNumber };
    }
    namespace reduceMotion {
        let isBoolean_43: true;
        export { isBoolean_43 as isBoolean };
    }
    namespace reduceTransparency {
        let isBoolean_44: true;
        export { isBoolean_44 as isBoolean };
    }
    namespace autoFillPasswords {
        let isBoolean_45: true;
        export { isBoolean_45 as isBoolean };
    }
    namespace mjpegScreenshotUrl {
        let isString_30: true;
        export { isString_30 as isString };
    }
    namespace permissions {
        let isString_31: true;
        export { isString_31 as isString };
    }
    namespace screenshotQuality {
        let isNumber_12: true;
        export { isNumber_12 as isNumber };
    }
    namespace wdaEventloopIdleDelay {
        let isNumber_13: true;
        export { isNumber_13 as isNumber };
    }
    namespace otherApps {
        let isString_32: true;
        export { isString_32 as isString };
    }
    namespace includeSafariInWebviews {
        let isBoolean_46: true;
        export { isBoolean_46 as isBoolean };
    }
    let additionalWebviewBundleIds: {};
    namespace webviewConnectTimeout {
        let isNumber_14: true;
        export { isNumber_14 as isNumber };
    }
    namespace webviewAtomWaitTimeout {
        let isNumber_15: true;
        export { isNumber_15 as isNumber };
    }
    namespace iosSimulatorLogsPredicate {
        let isString_33: true;
        export { isString_33 as isString };
    }
    namespace simulatorLogLevel {
        let isString_34: true;
        export { isString_34 as isString };
    }
    namespace appPushTimeout {
        let isNumber_16: true;
        export { isNumber_16 as isNumber };
    }
    namespace nativeWebTapStrict {
        let isBoolean_47: true;
        export { isBoolean_47 as isBoolean };
    }
    namespace safariWebInspectorMaxFrameLength {
        let isNumber_17: true;
        export { isNumber_17 as isNumber };
    }
    namespace allowProvisioningDeviceRegistration {
        let isBoolean_48: true;
        export { isBoolean_48 as isBoolean };
    }
    namespace waitForIdleTimeout {
        let isNumber_18: true;
        export { isNumber_18 as isNumber };
    }
    namespace resultBundlePath {
        let isString_35: true;
        export { isString_35 as isString };
    }
    namespace resultBundleVersion {
        let isNumber_19: true;
        export { isNumber_19 as isNumber };
    }
    namespace safariIgnoreWebHostnames {
        let isString_36: true;
        export { isString_36 as isString };
    }
    namespace disableAutomaticScreenshots {
        let isBoolean_49: true;
        export { isBoolean_49 as isBoolean };
    }
    namespace shouldTerminateApp {
        let isBoolean_50: true;
        export { isBoolean_50 as isBoolean };
    }
    namespace forceAppLaunch {
        let isBoolean_51: true;
        export { isBoolean_51 as isBoolean };
    }
    namespace useNativeCachingStrategy {
        let isBoolean_52: true;
        export { isBoolean_52 as isBoolean };
    }
    namespace appInstallStrategy {
        let deprecated_3: true;
        export { deprecated_3 as deprecated };
        let isString_37: true;
        export { isString_37 as isString };
        let inclusionCaseInsensitive_1: readonly ["serial", "parallel", "ios-deploy"];
        export { inclusionCaseInsensitive_1 as inclusionCaseInsensitive };
    }
    namespace enforceAppInstall {
        let isBoolean_53: true;
        export { isBoolean_53 as isBoolean };
    }
    namespace skipTriggerInputEventAfterSendkeys {
        let isBoolean_54: true;
        export { isBoolean_54 as isBoolean };
    }
    namespace sendKeyStrategy {
        let isString_38: true;
        export { isString_38 as isString };
    }
    namespace skipSyncUiDialogTranslation {
        let isBoolean_55: true;
        export { isBoolean_55 as isBoolean };
    }
    namespace forceSimulatorSoftwareKeyboardPresence {
        let isBoolean_56: true;
        export { isBoolean_56 as isBoolean };
    }
    namespace appLaunchStateTimeoutSec {
        let isNumber_20: true;
        export { isNumber_20 as isNumber };
    }
    namespace appTimeZone {
        let isString_39: true;
        export { isString_39 as isString };
    }
    namespace pageLoadStrategy {
        let isString_40: true;
        export { isString_40 as isString };
        let inclusionCaseInsensitive_2: readonly ["none", "eager", "normal"];
        export { inclusionCaseInsensitive_2 as inclusionCaseInsensitive };
    }
}
export const PLATFORM_NAME_IOS: "iOS";
export const PLATFORM_NAME_TVOS: "tvOS";
//# sourceMappingURL=desired-caps.d.ts.map