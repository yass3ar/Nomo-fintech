declare namespace _default {
    /**
     * @this {XCUITestDriver}
     * @deprecated
     */
    function hideKeyboard(this: import("../driver").XCUITestDriver, strategy: any, ...possibleKeys: any[]): Promise<boolean>;
    /**
     * @this {XCUITestDriver}
     * @param {string[]} keys
     */
    function mobileHideKeyboard(this: import("../driver").XCUITestDriver, keys?: string[]): Promise<void>;
    /**
     * @this {XCUITestDriver}
     */
    function isKeyboardShown(this: import("../driver").XCUITestDriver): Promise<boolean>;
    /**
     * Send keys to the given element or to the application under test.
     * This API is not supported on tvOS
     *
     * @since Xcode 15/iOS 17
     * @this {import('../driver').XCUITestDriver}
     * @param {(Key|string)[]} keys Array of keys to type.
     * Each item could either be a string, that represents a key itself (see
     * https://developer.apple.com/documentation/xctest/xcuielement/1500604-typekey?language=objc
     * and https://developer.apple.com/documentation/xctest/xcuikeyboardkey?language=objc)
     * or a dictionary, if the key should also be entered with modifiers.
     * @param {string?} [elementId=null] uuid of the element to send keys to.
     * If the element is not provided then the keys will be sent to the current application.
     */
    function mobileKeys(this: import("../driver").XCUITestDriver, keys: (Key | string)[], elementId?: string | null | undefined): Promise<unknown>;
}
export default _default;
export type XCUITestDriver = import("../driver").XCUITestDriver;
export type Key = import("./types").KeyboardKey;
//# sourceMappingURL=keyboard.d.ts.map