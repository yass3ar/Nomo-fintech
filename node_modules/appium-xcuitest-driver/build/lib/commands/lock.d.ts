declare namespace _default {
    /**
     * Lock the device (and optionally unlock the device after a certain amount of time)
     *
     * @param {number|string} [seconds] - the number of seconds after which to unlock the device. Set to `0` or leave empty to require manual unlock (do not automatically unlock).
     * @defaultValue 0
     * @this {XCUITestDriver}
     */
    function lock(this: import("../driver").XCUITestDriver, seconds?: string | number | undefined): Promise<void>;
    /**
     * Unlock the device
     *
     * @this {XCUITestDriver}
     */
    function unlock(this: import("../driver").XCUITestDriver): Promise<void>;
    /**
     * Determine whether the device is locked
     *
     * @this {XCUITestDriver}
     * @returns {Promise<boolean>} `true` if the device is locked, `false` otherwise
     */
    function isLocked(this: import("../driver").XCUITestDriver): Promise<boolean>;
}
export default _default;
export type XCUITestDriver = import("../driver").XCUITestDriver;
//# sourceMappingURL=lock.d.ts.map