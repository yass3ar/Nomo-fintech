"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DTXEncoder = void 0;
const stream_1 = __importDefault(require("stream"));
const headers_1 = require("../headers");
class DTXEncoder extends stream_1.default.Transform {
    constructor() {
        super({ objectMode: true });
    }
    _transform(data, encoding, onData) {
        this.push(this._encode(data), 'binary');
        onData();
    }
    _encode(data) {
        const { sync, channelCode, selector, auxiliaries, identifier } = data;
        const dtx = new headers_1.DTXMessage({
            identifier,
            channelCode,
            selector,
            expectsReply: sync
        });
        if (auxiliaries instanceof headers_1.DTXMessageAux) {
            dtx.auxiliaries = auxiliaries;
        }
        else {
            dtx.auxiliaries.data = auxiliaries;
        }
        return dtx.build();
    }
}
exports.DTXEncoder = DTXEncoder;
//# sourceMappingURL=dtx-encode.js.map