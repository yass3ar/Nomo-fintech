export default MCInstallProxyService;
export class MCInstallProxyService extends BaseServicePlist {
    constructor(socketClient: any);
    /**
     * @typedef {Object} ProfileList
     * @property {any[]} OrderedIdentifiers list of all profile ident
     * @property {Object} ProfileManifest
     * @property {Object} ProfileMetadata
     * @property {String} Status
     */
    /**
     * Get all profiles of iOS devices
     * @returns {Promise<ProfileList>}
     * e.g.
     * {
     *   OrderedIdentifiers: [ '2fac1c2b3d684843189b2981c718b0132854a847a' ],
     *   ProfileManifest: {
     *     '2fac1c2b3d684843189b2981c718b0132854a847a': {
     *       Description: 'Charles Proxy CA (7 Dec 2020, MacBook-Pro.local)',
     *       IsActive: true
     *     }
     *   },
     *   ProfileMetadata: {
     *     '2fac1c2b3d684843189b2981c718b0132854a847a': {
     *       PayloadDisplayName: 'Charles Proxy CA (7 Dec 2020, MacBook-Pro.local)',
     *       PayloadRemovalDisallowed: false,
     *       PayloadUUID: 'B30005CC-BC73-4E42-8545-8DA6C44A8A71',
     *       PayloadVersion: 1
     *     }
     *   },
     *   Status: 'Acknowledged'
     * }
     */
    getProfileList(): Promise<{
        /**
         * list of all profile ident
         */
        OrderedIdentifiers: any[];
        ProfileManifest: any;
        ProfileMetadata: any;
        Status: string;
    }>;
    /**
     * Install profile to iOS device
     * @param {String} path  must be a certificate file .PEM .CER and more formats
     * e.g: /Downloads/charles-certificate.pem
     * @returns {Promise<Record<any, any>>} e.g. {Status: 'Acknowledged'}
     */
    installProfile(path: string): Promise<Record<any, any>>;
    /**
     * Remove profile from iOS device
     * @param {String} ident  Query identifier list through getProfileList method
     * @returns {Promise<Record<any, any>>} e.g. {Status: 'Acknowledged'}
     */
    removeProfile(ident: string): Promise<Record<any, any>>;
}
export const MC_INSTALL_SERVICE_NAME: "com.apple.mobile.MCInstall";
import { BaseServicePlist } from '../base-service';
//# sourceMappingURL=index.d.ts.map