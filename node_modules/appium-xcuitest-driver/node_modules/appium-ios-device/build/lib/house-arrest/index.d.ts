export default HouseArrestService;
export class HouseArrestService extends BaseServiceSocket {
    constructor(socketClient: any);
    _decoder: PlistServiceDecoder;
    _splitter: LengthBasedSplitter;
    _encoder: PlistServiceEncoder;
    /**
     * Vends into the application container and returns an AfcService
     * @param {string} bundleId The bundle id of the app container that we will enter to
     * @throws Will throw an error if house arrest fails to access the application's container
     * @returns {Promise<AfcService>}
     */
    vendContainer(bundleId: string): Promise<AfcService>;
    /**
     * Vends into the application documents and returns an AfcService
     * @param {string} bundleId The bundle id of the app documents that we will enter to
     * @throws Will throw an error if house arrest fails to access the application's documents
     * @returns {Promise<AfcService>}
     */
    vendDocuments(bundleId: string): Promise<AfcService>;
    _receivePlistPromise(timeout?: number): B<any>;
}
export const HOUSE_ARREST_SERVICE_NAME: "com.apple.mobile.house_arrest";
import { BaseServiceSocket } from '../base-service';
import PlistServiceDecoder from '../plist-service/transformer/plist-service-decoder';
import LengthBasedSplitter from '../util/transformer/length-based-splitter';
import PlistServiceEncoder from '../plist-service/transformer/plist-service-encoder';
import AfcService from '../afc';
import B from 'bluebird';
//# sourceMappingURL=index.d.ts.map