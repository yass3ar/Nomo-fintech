export default PlistService;
export class PlistService extends BaseServiceSocket {
    constructor(socketClient: any);
    _decoder: PlistServiceDecoder;
    _splitter: LengthBasedSplitter;
    _encoder: PlistServiceEncoder;
    replyQueue: any[];
    sendPlistAndReceive(json: any, timeout?: number): Promise<any>;
    sendPlist(json: any): void;
    receivePlist(timeout?: number): Promise<any>;
    enableSessionSSL(hostPrivateKey: any, hostCertificate: any): void;
}
import { BaseServiceSocket } from '../base-service';
import PlistServiceDecoder from './transformer/plist-service-decoder';
import LengthBasedSplitter from '../util/transformer/length-based-splitter';
import PlistServiceEncoder from './transformer/plist-service-encoder';
//# sourceMappingURL=index.d.ts.map