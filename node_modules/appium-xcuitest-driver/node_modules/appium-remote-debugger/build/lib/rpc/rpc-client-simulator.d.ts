export class RpcClientSimulator extends RpcClient {
    /**
     * @param {import('./rpc-client').RpcClientOptions & RpcClientSimulatorOptions} [opts={}]
     */
    constructor(opts?: (import("./rpc-client").RpcClientOptions & RpcClientSimulatorOptions) | undefined);
    /** @type {string|undefined} */
    host: string | undefined;
    /** @type {number|undefined} */
    port: number | undefined;
    /** @type {any} */
    messageProxy: any;
    /** @type {import('node:net').Socket|null} */
    socket: import("node:net").Socket | null;
    /** @type {string|undefined} */
    socketPath: string | undefined;
    /**
     * @override
     */
    override connect(): Promise<any>;
    service: any;
    /**
     * @override
     */
    override sendMessage(cmd: any): Promise<any>;
    /**
     * @override
     */
    override receive(data: any): Promise<void>;
}
export default RpcClientSimulator;
export type RpcClientSimulatorOptions = {
    socketPath?: string | undefined;
    host?: string | undefined;
    port?: number | undefined;
    messageProxy?: any;
};
import RpcClient from './rpc-client';
//# sourceMappingURL=rpc-client-simulator.d.ts.map