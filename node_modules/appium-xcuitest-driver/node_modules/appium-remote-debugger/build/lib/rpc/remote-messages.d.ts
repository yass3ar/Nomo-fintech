export class RemoteMessages {
    constructor(isTargetBased?: boolean);
    set isTargetBased(isTargetBased: any);
    get isTargetBased(): any;
    _isTargetBased: any;
    setConnectionKey(connId: any): {
        __argument: {
            WIRConnectionIdentifierKey: any;
        };
        __selector: string;
    };
    connectToApp(connId: any, appIdKey: any): {
        __argument: {
            WIRConnectionIdentifierKey: any;
            WIRApplicationIdentifierKey: any;
        };
        __selector: string;
    };
    setSenderKey(connId: any, senderId: any, appIdKey: any, pageIdKey: any): {
        __argument: {
            WIRApplicationIdentifierKey: any;
            WIRConnectionIdentifierKey: any;
            WIRSenderKey: any;
            WIRPageIdentifierKey: any;
            WIRAutomaticallyPause: boolean;
        };
        __selector: string;
    };
    indicateWebView(connId: any, appIdKey: any, pageIdKey: any, enabled: any): {
        __argument: {
            WIRApplicationIdentifierKey: any;
            WIRIndicateEnabledKey: any;
            WIRConnectionIdentifierKey: any;
            WIRPageIdentifierKey: any;
        };
        __selector: string;
    };
    launchApplication(bundleId: any): {
        __argument: {
            WIRApplicationBundleIdentifierKey: any;
        };
        __selector: string;
    };
    getFullCommand(opts?: {}): _.Dictionary<any>;
    getMinimalCommand(opts?: {}): _.Dictionary<any>;
    getDirectCommand(opts?: {}): _.Dictionary<any>;
    getRemoteCommand(command: any, opts: any): any;
}
export default RemoteMessages;
import _ from 'lodash';
//# sourceMappingURL=remote-messages.d.ts.map