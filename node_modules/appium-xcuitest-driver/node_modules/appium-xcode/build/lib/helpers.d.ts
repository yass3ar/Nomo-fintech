/**
 * Executes 'xcrun' command line utility
 *
 * @param {string[]} args xcrun arguments
 * @param {number} timeout [15000] The maximum number of milliseconds to wait until xcrun exists
 * @returns {Promise<import("teen_process").TeenProcessExecResult>} The result of xcrun execution
 * @throws {Error} If xcrun returned non-zero exit code or timed out
 */
export function runXcrunCommand(args: string[], timeout?: number): Promise<import("teen_process").TeenProcessExecResult<any>>;
/**
 * Uses macOS Spotlight service to detect where the given app is installed
 *
 * @param {string} bundleId Bundle identifier of the target app
 * @returns {Promise<string[]>} Full paths to where the app with the given bundle id is present.
 */
export function findAppPaths(bundleId: string): Promise<string[]>;
/**
 * Finds and retrieves the content of the Xcode's Info.plist file
 *
 * @param {string} developerRoot Full path to the Contents/Developer folder under Xcode.app root
 * @returns {Promise<object>} All plist entries as an object or an empty object if no plist was found
 */
export function readXcodePlist(developerRoot: string): Promise<object>;
export const XCRUN_TIMEOUT: 15000;
//# sourceMappingURL=helpers.d.ts.map