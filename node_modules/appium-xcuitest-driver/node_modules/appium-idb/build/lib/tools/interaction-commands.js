"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const logger_js_1 = __importDefault(require("../logger.js"));
const lodash_1 = __importDefault(require("lodash"));
const support_1 = require("@appium/support");
const interactionCommands = {};
/**
 * Taps at given coordinates
 *
 * @this {import('../idb.js').IDB}
 * @param {number|string} x Tap X coordinate
 * @param {number|string} y Tap Y coordinate
 */
interactionCommands.tap = async function tap(x, y) {
    logger_js_1.default.debug(`Performing tap at (${x}, ${y}) on the device '${this.udid}'`);
    await this.exec(['ui', 'tap'], [`${x}`, `${y}`]);
};
/**
 * Presses a hardware button on device under test
 *
 * @this {import('../idb.js').IDB}
 * @param {string} name One of {APPLE_PAY,HOME,LOCK,SIDE_BUTTON,SIRI}
 */
interactionCommands.pressButton = async function pressButton(name) {
    logger_js_1.default.debug(`Performing button press of '${name}' on the device '${this.udid}'`);
    await this.exec(['ui', 'button'], [name]);
};
/**
 * Types the given text on the device under test
 *
 * @this {import('../idb.js').IDB}
 * @param {string} text The text to type
 */
interactionCommands.typeText = async function typeText(text) {
    logger_js_1.default.debug(`Typing '${text}' on the device '${this.udid}'`);
    await this.exec(['ui', 'text'], [text]);
};
/**
 * @typedef {Object} KeycodeOpts
 *
 * @property {number|string} [duration] - The key press duration in float seconds.
 * The option is ignored if multiple key codes are set.
 */
/**
 * Send a keycode or key codes sequence to the device under test
 *
 * @this {import('../idb.js').IDB}
 * @param {number|string|string[]|number[]} codeOrCodes Single key code
 * or array of codes
 * @param {KeycodeOpts} opts
 */
interactionCommands.pressKeycode = async function pressKeycode(codeOrCodes, opts = {}) {
    const { duration, } = opts;
    logger_js_1.default.debug(`Performing key code(s) ${JSON.stringify(codeOrCodes)} press ` +
        `on the device '${this.udid}'`);
    const command = ['ui', lodash_1.default.isArray(codeOrCodes) ? 'key-sequence' : 'key'];
    const args = [];
    if (lodash_1.default.isArray(codeOrCodes)) {
        args.push(...codeOrCodes);
    }
    else {
        if (support_1.util.hasValue(duration)) {
            args.push('--duration', duration);
        }
        args.push(codeOrCodes);
    }
    await this.exec(command, args.map(String));
};
exports.default = interactionCommands;
//# sourceMappingURL=interaction-commands.js.map