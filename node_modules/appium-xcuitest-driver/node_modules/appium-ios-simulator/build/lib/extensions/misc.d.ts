/**
 * @this {CoreSimulatorWithMiscFeatures}
 * Perform Shake gesture on Simulator window.
 */
export function shake(this: CoreSimulatorWithMiscFeatures): Promise<void>;
/**
 * Adds the given certificate into the Trusted Root Store on the simulator.
 * The simulator must be shut down in order for this method to work properly.
 *
 * @this {CoreSimulatorWithMiscFeatures}
 * @param {string} payload the content of the PEM certificate
 * @param {import('../types').CertificateOptions} [opts={}]
 * @returns {Promise<boolean>} `true` if the certificate has been successfully installed
 * or `false` if it has already been there
 */
export function addCertificate(this: CoreSimulatorWithMiscFeatures, payload: string, opts?: import("../types").CertificateOptions | undefined): Promise<boolean>;
/**
 * Simulates push notification delivery
 *
 * @this {CoreSimulatorWithMiscFeatures}
 * @param {import('@appium/types').StringRecord} payload
 * @returns {Promise<void>}
 * @since Xcode SDK 11.4
 */
export function pushNotification(this: CoreSimulatorWithMiscFeatures, payload: import("@appium/types").StringRecord): Promise<void>;
export type CoreSimulatorWithMiscFeatures = import("../types").CoreSimulator & import("../types").HasMiscFeatures;
//# sourceMappingURL=misc.d.ts.map