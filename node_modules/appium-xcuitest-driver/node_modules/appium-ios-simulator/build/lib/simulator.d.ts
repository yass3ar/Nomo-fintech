/**
 * Finds and returns the corresponding Simulator instance for the given ID.
 *
 * @param {string} udid - The ID of an existing Simulator.
 * @param {import('./types').SimulatorLookupOptions} [opts={}]
 * @throws {Error} If the Simulator with given udid does not exist in devices list.
 *   If you want to create a new simulator, you can use the `createDevice()` method of
 *   [node-simctl](github.com/appium/node-simctl).
 * @return {Promise<import('./types').Simulator>} Simulator object associated with the udid passed in.
 */
export function getSimulator(udid: string, opts?: import("./types").SimulatorLookupOptions | undefined): Promise<import("./types").Simulator>;
//# sourceMappingURL=simulator.d.ts.map